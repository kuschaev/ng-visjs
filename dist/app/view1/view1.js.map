{"version":3,"sources":["../../../app/view1/view1.js"],"names":["angular","module","config","$routeProvider","when","templateUrl","controller","$scope","VisDataSet","nodes","edges","LENGTH_MAIN","LENGTH_SERVER","LENGTH_SUB","WIDTH_SCALE","RED","GRAY","push","id","label","group","value","from","to","length","width","color","fontColor","x","y","step","fixed","physics","data","vis","DataSet","options","autoResize","height","layout","improvedLayout","groups","switch","shape","desktop","mobile","server","internet","selectedNodes","selectedEdges","hiddenNodes","hiddenEdges","activeNode","events","doubleClick","doubleClicked","toString","selectEdge","selected","selectNode","console","log","hideSelection","alert","selectedNodeId","forEach","nodeId","update","hidden","edgeId","showHiddenNodesAndEdges"],"mappings":"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","file":"view1.js","sourcesContent":["'use strict';\r\n\r\nangular.module('myApp.view1', ['ngRoute', 'ngMaterial', 'ngMessages', 'ngSanitize', 'ngVis'])\r\n\r\n.config(['$routeProvider', function($routeProvider) {\r\n    $routeProvider.when('/view1', {\r\n        templateUrl: 'view1/view1.html',\r\n        controller: 'View1Ctrl'\r\n    });\r\n}])\r\n\r\n.controller('View1Ctrl', ['$scope', 'VisDataSet',\r\n    function($scope, VisDataSet) {\r\n\r\n        var nodes = [];\r\n\r\n        var edges = [];\r\n\r\n        var LENGTH_MAIN = 350,\r\n            LENGTH_SERVER = 150,\r\n            LENGTH_SUB = 50,\r\n            WIDTH_SCALE = 2,\r\n            RED = '#C5000B',\r\n            GRAY = '#666666';\r\n\r\n        // initial group of nodes (switches)\r\n        nodes.push({id: 1, label: '192.168.0.1', group: 'switch', value: 10});\r\n        nodes.push({id: 2, label: '192.168.0.2', group: 'switch', value: 8});\r\n        nodes.push({id: 3, label: '192.168.0.3', group: 'switch', value: 6});\r\n        edges.push({from: 1, to: 2, length: LENGTH_MAIN, width: WIDTH_SCALE * 6, label: '0.71 mbps'});\r\n        edges.push({from: 1, to: 3, length: LENGTH_MAIN, width: WIDTH_SCALE * 4, label: '0.55 mbps'});\r\n\r\n        // group around 1\r\n        nodes.push({id: 10, label: '192.168.0.10', group: 'server', value: 10});\r\n        edges.push({from: 1, to: 10, length: LENGTH_SERVER, color: GRAY, width: WIDTH_SCALE * 6, label: '0.92 mbps'});\r\n        nodes.push({id: 11, label: '192.168.0.11', group: 'server', value: 7});\r\n        edges.push({from: 1, to: 11, length: LENGTH_SERVER, color: GRAY, width: WIDTH_SCALE * 3, label: '0.68 mbps'});\r\n        nodes.push({id: 12, label: '192.168.0.12', group: 'server', value: 3});\r\n        edges.push({from: 1, to: 12, length: LENGTH_SERVER, color: GRAY, width: WIDTH_SCALE, label: '0.3 mbps'});\r\n        nodes.push({id: 204, label: 'Internet', group: 'internet', value: 10});\r\n        edges.push({from: 1, to: 204, length: 200, width: WIDTH_SCALE * 3, label: '0.63 mbps'});\r\n\r\n        // group around 2\r\n        nodes.push({id: 100, label: '192.168.0.100', group: 'desktop', value: 1});\r\n        edges.push({from: 2, to: 100, length: LENGTH_SUB, color: GRAY, fontColor: GRAY, width: WIDTH_SCALE * 2});\r\n        nodes.push({id: 101, label: '192.168.0.101', group: 'desktop', value: 1});\r\n        edges.push({from: 2, to: 101, length: LENGTH_SUB, color: GRAY, fontColor: GRAY, width: WIDTH_SCALE * 2});\r\n        nodes.push({id: 102, label: '192.168.0.102', group: 'desktop', value: 1});\r\n        edges.push({from: 2, to: 102, length: LENGTH_SUB, color: RED, fontColor: GRAY, width: WIDTH_SCALE * 2});\r\n        nodes.push({id: 103, label: '192.168.0.103', group: 'desktop', value: 5});\r\n        edges.push({from: 2, to: 103, length: LENGTH_SUB, color: GRAY, fontColor: GRAY, width: 3});\r\n        nodes.push({id: 104, label: '192.168.0.104', group: 'desktop', value: 1});\r\n        edges.push({from: 2, to: 104, length: LENGTH_SUB, color: GRAY, fontColor: GRAY, width: WIDTH_SCALE * 2});\r\n        nodes.push({id: 201, label: '192.168.0.201', group: 'desktop', value: 1});\r\n        edges.push({from: 2, to: 201, length: LENGTH_SUB, color: GRAY, width: WIDTH_SCALE});\r\n\r\n        // group around 3\r\n        nodes.push({id: 202, label: '192.168.0.202', group: 'desktop', value: 4});\r\n        edges.push({from: 3, to: 202, length: LENGTH_SUB, color: GRAY, width: WIDTH_SCALE * 2});\r\n        nodes.push({id: 230, label: '192.168.0.230', group: 'mobile', value: 2});\r\n        edges.push({from: 3, to: 230, length: LENGTH_SUB, color: GRAY, fontColor: GRAY, width: WIDTH_SCALE});\r\n\r\n        // legend\r\n\r\n        var x = -400;\r\n        var y = -200;\r\n\r\n        var step = 70;\r\n        nodes.push({id: 1000, x: x, y: y,\r\n            label: 'Internet', group: 'internet', value: 1, fixed: true, physics:false});\r\n        nodes.push({id: 1001, x: x, y: y + step,\r\n            label: 'Switch', group: 'switch', value: 1, fixed: true,  physics:false});\r\n        nodes.push({id: 1002, x: x, y: y + 2 * step,\r\n            label: 'Server', group: 'server', value: 1, fixed: true,  physics:false});\r\n        nodes.push({id: 1003, x: x, y: y + 3 * step,\r\n            label: 'Computer', group: 'desktop', value: 1, fixed: true,  physics:false});\r\n        nodes.push({id: 1004, x: x, y: y + 4 * step,\r\n            label: 'Smartphone', group: 'mobile', value: 1, fixed: true,  physics:false});\r\n\r\n        $scope.data = {\r\n            nodes: new vis.DataSet(nodes),\r\n            edges: new vis.DataSet(edges)\r\n        };\r\n\r\n        $scope.options = {\r\n            autoResize: true,\r\n            height: '800',\r\n            width: '100%',\r\n            layout: {\r\n                improvedLayout: false\r\n            },\r\n            groups: {\r\n                switch: {\r\n                    shape: 'triangle',\r\n                    color: '#FF9900' // orange\r\n                },\r\n                desktop: {\r\n                    shape: 'dot',\r\n                    color: \"#2B7CE9\" // blue\r\n                },\r\n                mobile: {\r\n                    shape: 'dot',\r\n                    color: \"#5A1E5C\" // purple\r\n                },\r\n                server: {\r\n                    shape: 'square',\r\n                    color: \"#C5000B\" // red\r\n                },\r\n                internet: {\r\n                    shape: 'square',\r\n                    color: \"#109618\" // green\r\n                }\r\n            }\r\n        };\r\n\r\n        $scope.selectedNodes = [];\r\n        $scope.selectedEdges = [];\r\n\r\n        $scope.hiddenNodes = [];\r\n        $scope.hiddenEdges = [];\r\n\r\n        $scope.activeNode = \"Avada Kedavra\";\r\n\r\n        $scope.events = {\r\n            doubleClick: function(doubleClicked) {\r\n                // doubleClicked.event = \"[original event]\";\r\n                // document.getElementById('eventDC').innerHTML = '<h2>doubleClick event:</h2>' + JSON.stringify(doubleClicked, null, 4);\r\n                $scope.activeNode = doubleClicked.nodes.toString();\r\n            },\r\n\r\n            selectEdge: function(selected) {\r\n                $scope.selectedEdges = [];\r\n                $scope.selectedEdges = selected.edges;\r\n                $scope.selectedNodes = [];\r\n                $scope.selectedNodes.push(selected.nodes);\r\n            },\r\n            selectNode: function(selected) {\r\n                // console.log(selected);\r\n                console.log(\"Selected node: \" + selected.nodes.toString());\r\n\r\n                // EBALA\r\n                /*switch (selected.nodes.toString()) {\r\n                    case '1000':\r\n                        console.log($scope.data.nodes);\r\n\r\n                        break;\r\n                    case '1001':\r\n\r\n                        break;\r\n                    case '1002':\r\n\r\n                        break;\r\n                    case '1003':\r\n\r\n                        break;\r\n                    case '1004':\r\n\r\n                        break;\r\n                    default:\r\n\r\n                }*/\r\n            }\r\n        };\r\n        // for magic trick button\r\n        $scope.hideSelection = function() {\r\n            alert(\"I will make those edges disappear!!\");\r\n            var selectedNodeId = $scope.selectedNodes;\r\n\r\n            if(selectedNodeId.length === 0) {\r\n                alert(\"You have not selected a node to disappear\");\r\n            }\r\n\r\n            if ($scope.selectedNodes.length > 0) {\r\n                $scope.selectedNodes.forEach(function(nodeId) {\r\n                    $scope.data.nodes.update([{id: nodeId.toString(), hidden: true}]);\r\n                    $scope.hiddenNodes.push(nodeId);\r\n                });\r\n            }\r\n\r\n            if ($scope.selectedEdges.length > 0) {\r\n                $scope.selectedEdges.forEach(function(edgeId) {\r\n                    $scope.data.edges.update([{id: edgeId.toString(), hidden: true}]);\r\n                    $scope.hiddenEdges.push(edgeId);\r\n                });\r\n            }\r\n        };\r\n        // reverses the magic trick\r\n        $scope.showHiddenNodesAndEdges = function() {\r\n            if($scope.hiddenNodes.length === 0) {\r\n                alert(\"There are no disappeared nodes yet\");\r\n                return ;\r\n            }\r\n\r\n            $scope.hiddenEdges.forEach(function(edgeId) {\r\n                $scope.data.edges.update([{id: edgeId.toString(), hidden: false}]);\r\n            });\r\n            $scope.selectedEdges = [];\r\n\r\n            $scope.hiddenNodes.forEach(function(nodeId) {\r\n                $scope.data.nodes.update([{id:nodeId.toString(), hidden: false}]);\r\n            });\r\n            $scope.selectedNodes = [];\r\n        };\r\n\r\n    }\r\n]);\r\n"]}