{"version":3,"sources":["../../../app/view1/view1.js"],"names":["angular","module","config","$routeProvider","when","templateUrl","controller","$scope","VisDataSet","nodes","edges","LENGTH_MAIN","LENGTH_SERVER","LENGTH_SUB","WIDTH_SCALE","RED","GRAY","BLACK","push","id","label","group","value","from","to","length","width","i","color","fontColor","x","y","step","fixed","physics","data","vis","DataSet","options","autoResize","height","layout","improvedLayout","groups","switch","shape","desktop","mobile","server","internet","selectedNodes","selectedEdges","hiddenNodes","hiddenEdges","activeNode","events","doubleClick","doubleClicked","event","document","getElementById","innerHTML","JSON","stringify","toString","selectEdge","selected","selectNode","console","log","hideSelection","alert","selectedNodeId","forEach","nodeId","update","hidden","edgeId","showHiddenNodesAndEdges"],"mappings":"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","file":"view1.js","sourcesContent":["'use strict';\r\n\r\nangular.module('myApp.view1', ['ngRoute', 'ngMaterial', 'ngMessages', 'ngSanitize', 'ngVis'])\r\n\r\n.config(['$routeProvider', function($routeProvider) {\r\n    $routeProvider.when('/view1', {\r\n        templateUrl: 'view1/view1.html',\r\n        controller: 'View1Ctrl'\r\n    });\r\n}])\r\n\r\n.controller('View1Ctrl', ['$scope', 'VisDataSet',\r\n    function($scope, VisDataSet) {\r\n\r\n        var nodes = [];\r\n\r\n        var edges = [];\r\n\r\n        var LENGTH_MAIN = 350,\r\n            LENGTH_SERVER = 150,\r\n            LENGTH_SUB = 50,\r\n            WIDTH_SCALE = 2,\r\n            RED = '#C5000B',\r\n            GRAY = '#666666',\r\n            BLACK = '#2B1B17';\r\n\r\n        nodes.push({id: 1, label: '192.168.0.1', group: 'switch', value: 10});\r\n        nodes.push({id: 2, label: '192.168.0.2', group: 'switch', value: 8});\r\n        nodes.push({id: 3, label: '192.168.0.3', group: 'switch', value: 6});\r\n        edges.push({from: 1, to: 2, length: LENGTH_MAIN, width: WIDTH_SCALE * 6, label: '0.71 mbps'});\r\n        edges.push({from: 1, to: 3, length: LENGTH_MAIN, width: WIDTH_SCALE * 4, label: '0.55 mbps'});\r\n\r\n        // group around 2\r\n        for (var i = 100; i <= 104; i++) {\r\n            var value = 1;\r\n            var width = WIDTH_SCALE * 2;\r\n            var color = GRAY;\r\n            var label = null;\r\n\r\n            if (i === 103) {\r\n                value = 5;\r\n                width = 3;\r\n            }\r\n            if (i === 102) {\r\n                color = RED;\r\n                label = 'OOPS!((9';\r\n            }\r\n\r\n            nodes.push({id: i, label: '192.168.0.' + i, group: 'desktop', value: value});\r\n            edges.push({from: 2, to: i, length: LENGTH_SUB, color: color, fontColor: color, width: width, label: label});\r\n        }\r\n        nodes.push({id: 201, label: '192.168.0.201', group: 'desktop', value: 1});\r\n        edges.push({from: 2, to: 201, length: LENGTH_SUB, color: GRAY, width: WIDTH_SCALE});\r\n\r\n        // group around 3\r\n        nodes.push({id: 202, label: '192.168.0.202', group: 'desktop', value: 4});\r\n        edges.push({from: 3, to: 202, length: LENGTH_SUB, color: GRAY, width: WIDTH_SCALE * 2});\r\n        for (var i = 230; i <= 231; i++ ) {\r\n            nodes.push({id: i, label: '192.168.0.' + i, group: 'mobile', value: 2});\r\n            edges.push({from: 3, to: i, length: LENGTH_SUB, color: GRAY, fontColor: GRAY, width: WIDTH_SCALE});\r\n        }\r\n\r\n        // group around 1\r\n        nodes.push({id: 10, label: '192.168.0.10', group: 'server', value: 10});\r\n        edges.push({from: 1, to: 10, length: LENGTH_SERVER, color: GRAY, width: WIDTH_SCALE * 6, label: '0.92 mbps'});\r\n        nodes.push({id: 11, label: '192.168.0.11', group: 'server', value: 7});\r\n        edges.push({from: 1, to: 11, length: LENGTH_SERVER, color: GRAY, width: WIDTH_SCALE * 3, label: '0.68 mbps'});\r\n        nodes.push({id: 12, label: '192.168.0.12', group: 'server', value: 3});\r\n        edges.push({from: 1, to: 12, length: LENGTH_SERVER, color: GRAY, width: WIDTH_SCALE, label: '0.3 mbps'});\r\n\r\n        nodes.push({id: 204, label: 'Internet', group: 'internet', value: 10});\r\n        edges.push({from: 1, to: 204, length: 200, width: WIDTH_SCALE * 3, label: '0.63 mbps'});\r\n\r\n\r\n        // legend\r\n        /*\r\n        var mynetwork = document.getElementById('mynetwork');\r\n        */\r\n        var x = -400;//- mynetwork.clientWidth / 2 + 50;\r\n        var y = -200;//- mynetwork.clientHeight / 2 + 50;\r\n\r\n        var step = 70;\r\n        nodes.push({id: 1000, x: x, y: y,\r\n            label: 'Internet', group: 'internet', value: 1, fixed: true, physics:false});\r\n        nodes.push({id: 1001, x: x, y: y + step,\r\n            label: 'Switch', group: 'switch', value: 1, fixed: true,  physics:false});\r\n        nodes.push({id: 1002, x: x, y: y + 2 * step,\r\n            label: 'Server', group: 'server', value: 1, fixed: true,  physics:false});\r\n        nodes.push({id: 1003, x: x, y: y + 3 * step,\r\n            label: 'Computer', group: 'desktop', value: 1, fixed: true,  physics:false});\r\n        nodes.push({id: 1004, x: x, y: y + 4 * step,\r\n            label: 'Smartphone', group: 'mobile', value: 1, fixed: true,  physics:false});\r\n\r\n        $scope.data = {\r\n            nodes: new vis.DataSet(nodes),\r\n            edges: new vis.DataSet(edges)\r\n        };\r\n\r\n        $scope.options = {\r\n            autoResize: true,\r\n            height: '800',\r\n            width: '100%',\r\n            layout: {\r\n                improvedLayout: false\r\n            },\r\n            groups: {\r\n                switch: {\r\n                    shape: 'triangle',\r\n                    color: '#FF9900' // orange\r\n                },\r\n                desktop: {\r\n                    shape: 'dot',\r\n                    color: \"#2B7CE9\" // blue\r\n                },\r\n                mobile: {\r\n                    shape: 'dot',\r\n                    color: \"#5A1E5C\" // purple\r\n                },\r\n                server: {\r\n                    shape: 'square',\r\n                    color: \"#C5000B\" // red\r\n                },\r\n                internet: {\r\n                    shape: 'square',\r\n                    color: \"#109618\" // green\r\n                }\r\n            }\r\n        };\r\n\r\n        $scope.selectedNodes = [];\r\n        $scope.selectedEdges = [];\r\n\r\n        $scope.hiddenNodes = [];\r\n        $scope.hiddenEdges = [];\r\n\r\n        $scope.activeNode = \"Avada Kedavra\";\r\n\r\n        $scope.events = {\r\n            doubleClick: function(doubleClicked) {\r\n                doubleClicked.event = \"[original event]\";\r\n                document.getElementById('eventDC').innerHTML = '<h2>doubleClick event:</h2>' + JSON.stringify(doubleClicked, null, 4);\r\n                $scope.activeNode = doubleClicked.nodes.toString();\r\n            },\r\n\r\n            selectEdge: function(selected) {\r\n                $scope.selectedEdges = [];\r\n                $scope.selectedEdges = selected.edges;\r\n                $scope.selectedNodes = [];\r\n                $scope.selectedNodes.push(selected.nodes);\r\n            },\r\n            selectNode: function(selected) {\r\n                // console.log(selected);\r\n                console.log(\"Selected node: \" + selected.nodes.toString());\r\n\r\n\r\n\r\n                // EBALA\r\n                /*switch (selected.nodes.toString()) {\r\n                    case '1000':\r\n                        console.log($scope.data.nodes);\r\n\r\n                        break;\r\n                    case '1001':\r\n\r\n                        break;\r\n                    case '1002':\r\n\r\n                        break;\r\n                    case '1003':\r\n\r\n                        break;\r\n                    case '1004':\r\n\r\n                        break;\r\n                    default:\r\n\r\n                }*/\r\n            }\r\n        };\r\n\r\n        $scope.hideSelection = function() {\r\n            alert(\"I will make those edges disappear!!\");\r\n            var selectedNodeId = $scope.selectedNodes;\r\n\r\n            if(selectedNodeId.length === 0) {\r\n                alert(\"You have not selected a node to disappear\");\r\n            }\r\n\r\n            if ($scope.selectedNodes.length > 0) {\r\n                $scope.selectedNodes.forEach(function(nodeId) {\r\n                    $scope.data.nodes.update([{id: nodeId.toString(), hidden: true}]);\r\n                    $scope.hiddenNodes.push(nodeId);\r\n                });\r\n            }\r\n\r\n            if ($scope.selectedEdges.length > 0) {\r\n                $scope.selectedEdges.forEach(function(edgeId) {\r\n                    $scope.data.edges.update([{id: edgeId.toString(), hidden: true}]);\r\n                    $scope.hiddenEdges.push(edgeId);\r\n                });\r\n            }\r\n        };\r\n\r\n        $scope.showHiddenNodesAndEdges = function() {\r\n            if($scope.hiddenNodes.length === 0) {\r\n                alert(\"There are no disappeared nodes yet\");\r\n                return ;\r\n            }\r\n\r\n            $scope.hiddenEdges.forEach(function(edgeId) {\r\n                $scope.data.edges.update([{id: edgeId.toString(), hidden: false}]);\r\n            });\r\n            $scope.selectedEdges = [];\r\n\r\n            $scope.hiddenNodes.forEach(function(nodeId) {\r\n                $scope.data.nodes.update([{id:nodeId.toString(), hidden: false}]);\r\n            });\r\n            $scope.selectedNodes = [];\r\n        };\r\n\r\n    }\r\n]);\r\n"]}